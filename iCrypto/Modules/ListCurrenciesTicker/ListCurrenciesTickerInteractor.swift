//
//  ListCurrenciesTickerInteractor.swift
//  iCrypto
//
//  Created by Nguyen Nghia on 8/31/20.
//  Copyright (c) 2020 Nghia Nguyen. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Alamofire
import Foundation
import RequestKits
import RxSwift

class ParamKeyRequestAdapter: RequestAdapter {
    func adapt(_ urlRequest: URLRequest, for session: Session, completion: @escaping (Result<URLRequest, Error>) -> Void) {
        var urlRequest = urlRequest
        do {
            urlRequest = try URLEncoding.default.encode(urlRequest, with: ["key": "3c11562f064b0603f47f340478d2e719"])
            completion(.success(urlRequest))
        } catch {
            completion(.failure(error))
        }
    }
}

final class ListCurrenciesTickerInteractor {
    private let network: Network

    init(network: Network = Network(config: NetworkConfig(requestAdapters: [ParamKeyRequestAdapter()]))) {
        self.network = network
    }
}

// MARK: - Extensions -

extension ListCurrenciesTickerInteractor: ListCurrenciesTickerInteractorInterface {
    func getListCurrenciesTicker() -> Observable<[CurrenciesTicker]> {
        network.rxRequest(requestable: GetListCurrenciesTickerRequest(currenciesIds: ["BTC", "ETH", "XRP"]))
    }
}

struct GetListCurrenciesTickerRequest: Requestable {
    var baseURL: URL {
        return URL(string: "https://api.nomics.com")!
    }

    var path: String {
        return "/v1/currencies/ticker"
    }

    var method: HTTPMethod {
        return .get
    }

    var task: Task {
        return .requestParameters(parameters: ["ids": currenciesIds.joined(separator: ",")], encoding: URLEncoding.default)
    }

    let currenciesIds: [String]
}
