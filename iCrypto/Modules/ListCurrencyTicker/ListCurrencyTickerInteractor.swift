//
//  ListCurrencyTickerInteractor.swift
//  iCrypto
//
//  Created by Nguyen Nghia on 8/31/20.
//  Copyright (c) 2020 Nghia Nguyen. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Alamofire
import Domain
import Foundation
import RequestKits
import RxSwift

final class ListCurrencyTickerInteractor {
    private let currencyTickerUseCase: CurrencyTickerUseCase

    init(currencyTickerUseCase: CurrencyTickerUseCase) {
        self.currencyTickerUseCase = currencyTickerUseCase
    }
}

// MARK: - Extensions -

extension ListCurrencyTickerInteractor: ListCurrencyTickerInteractorInterface {
    func getListCurrencyTicker(currencySymbols: [String]) -> Observable<[CurrencyTicker]> {
        return Observable<[CurrencyTicker]>.create { [weak self] observer -> Disposable in
            guard let self = self else {
                observer.onCompleted()
                return Disposables.create()
            }
            self.currencyTickerUseCase.getListCurrencyTicker(currencySymbols: currencySymbols) { result in
                switch result {
                case .success(let repsonse):
                    observer.onNext(repsonse)
                    observer.onCompleted()
                case .failure(let error):
                    observer.onError(error)
                }
            }
            return Disposables.create {}
        }
    }
}
